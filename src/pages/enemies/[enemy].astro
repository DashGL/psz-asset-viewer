---
import EnemyViewer from '../../components/EnemyViewer';
import { getCollection } from 'astro:content';

const base = import.meta.env.BASE_URL;

// Generate static paths for all enemies
export async function getStaticPaths() {
  const allEnemies = await getCollection('enemies');

  return allEnemies.map(entry => {
    // Strip /index from the ID
    const cleanId = entry.id.replace('/index', '');
    return {
      params: { enemy: cleanId },
      props: {
        enemyData: {
          name: cleanId,
          displayName: entry.data.name.charAt(0).toUpperCase() + entry.data.name.slice(1),
          animationCount: entry.data.animationCount,
          effectCount: entry.data.effectCount
        }
      }
    };
  });
}

const { enemy } = Astro.params;
const { enemyData } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{enemyData.displayName} - PSZ Enemy Viewer</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        background: #0a0a0a;
        color: #ffffff;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        min-height: 100vh;
        padding: 2rem;
      }

      .container {
        max-width: 1400px;
        margin: 0 auto;
      }

      .header {
        margin-bottom: 2rem;
      }

      .header h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a6f 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .header p {
        color: #aaa;
        font-size: 1.1rem;
      }

      .back-link {
        display: inline-block;
        margin-bottom: 1.5rem;
        padding: 0.5rem 1rem;
        background: #2a2a2a;
        border: 1px solid #333;
        border-radius: 4px;
        color: #fff;
        text-decoration: none;
        transition: background 0.2s;
      }

      .back-link:hover {
        background: #3a3a3a;
      }

      .stats {
        display: flex;
        gap: 2rem;
        margin-bottom: 1rem;
        padding: 1rem;
        background: #1a1a1a;
        border: 1px solid #333;
        border-radius: 8px;
      }

      .stat-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #aaa;
      }

      .stat-value {
        color: #fff;
        font-weight: bold;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <a href={`${base}enemies`} class="back-link">‚Üê Back to Enemy List</a>

      <div class="header">
        <h1>{enemyData.displayName}</h1>
        <p>Enemy Model Viewer</p>
      </div>

      <div class="stats">
        <div class="stat-item">
          <span>Animations:</span>
          <span class="stat-value">{enemyData.animationCount}</span>
        </div>
        <div class="stat-item">
          <span>Effects:</span>
          <span class="stat-value">{enemyData.effectCount}</span>
        </div>
      </div>

      <EnemyViewer client:load enemyName={enemy} basePath={`${base}enemies`} />
    </div>
  </body>
</html>
