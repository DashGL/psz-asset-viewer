---
import { getCollection } from 'astro:content';

const base = import.meta.env.BASE_URL;

// Get all weapons from the collection
const allWeapons = await getCollection('weapons');

// Transform to match the expected structure
const weapons = allWeapons.map(entry => {
  // Strip /index from the ID
  const cleanId = entry.id.replace('/index', '');
  return {
    id: cleanId,
    displayName: cleanId.toUpperCase(),
    animationCount: entry.data.animationCount,
    textureCount: entry.data.textureCount
  };
});

// Sort weapons by id
weapons.sort((a, b) => a.id.localeCompare(b.id));

// Group weapons by weapon type
function getWeaponType(id: string): string {
  const prefix = id.substring(1, 3);

  const typeMap: { [key: string]: string } = {
    'ba': 'Bazooka',
    'cl': 'Claw',
    'da': 'Dagger',
    'ds': 'Double Saber',
    'gb': 'Gunblade',
    'hg': 'Handgun',
    'lc': 'Launcher',
    'ma': 'Mag',
    'mg': 'Machinegun',
    'rg': 'Rifle',
    'ro': 'Rod',
    'sh': 'Shield',
    'sl': 'Slicer',
    'sp': 'Spear',
    'sw': 'Sword',
    'wa': 'Wand',
    'ws': 'W-Saber',
  };

  return typeMap[prefix] || 'Other';
}

const groupedWeapons: { [key: string]: typeof weapons } = {};
for (const weapon of weapons) {
  const typeName = getWeaponType(weapon.id);
  if (!groupedWeapons[typeName]) {
    groupedWeapons[typeName] = [];
  }
  groupedWeapons[typeName].push(weapon);
}
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Weapons - PSZ Asset Viewer</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        background: #0a0a0a;
        color: #ffffff;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        min-height: 100vh;
        padding: 2rem;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
      }

      .header {
        margin-bottom: 2rem;
      }

      .header h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .header p {
        color: #aaa;
        font-size: 1.1rem;
      }

      .back-link {
        display: inline-block;
        margin-bottom: 1.5rem;
        padding: 0.5rem 1rem;
        background: #2a2a2a;
        border: 1px solid #333;
        border-radius: 4px;
        color: #fff;
        text-decoration: none;
        transition: background 0.2s;
      }

      .back-link:hover {
        background: #3a3a3a;
      }

      .type-section {
        margin-bottom: 3rem;
      }

      .type-heading {
        font-size: 1.5rem;
        font-weight: bold;
        color: #667eea;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #667eea33;
      }

      .weapon-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 1rem;
      }

      .weapon-card {
        background: linear-gradient(135deg, #667eea22 0%, #764ba222 100%);
        border: 1px solid #333;
        border-radius: 8px;
        padding: 1rem;
        text-decoration: none;
        color: #fff;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
      }

      .weapon-card:hover {
        transform: translateY(-4px);
        border-color: #667eea;
        box-shadow: 0 8px 24px rgba(102, 126, 234, 0.2);
      }

      .weapon-name {
        font-size: 0.9rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
        font-family: 'Courier New', monospace;
        word-break: break-all;
      }

      .weapon-stats {
        font-size: 0.75rem;
        color: #aaa;
        margin-top: auto;
      }

      .no-weapons {
        text-align: center;
        padding: 4rem 2rem;
        color: #aaa;
      }

      .no-weapons h2 {
        margin-bottom: 1rem;
      }

      .no-weapons code {
        background: #1a1a1a;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <a href={`${base}/`} class="back-link">← Back to Home</a>

      <div class="header">
        <h1>Weapons</h1>
        <p>{weapons.length} weapon models available</p>
      </div>

      {weapons.length === 0 ? (
        <div class="no-weapons">
          <h2>No weapon models found</h2>
          <p>Run <code>npm run processWeapons</code> to convert weapon models.</p>
        </div>
      ) : (
        <div>
          {Object.entries(groupedWeapons).sort().map(([typeName, typeWeapons]) => (
            <div class="type-section">
              <h2 class="type-heading">{typeName} ({typeWeapons.length})</h2>
              <div class="weapon-grid">
                {typeWeapons.map(weapon => (
                  <a href={`${base}weapons/${weapon.id}`} class="weapon-card">
                    <div class="weapon-name">{weapon.displayName}</div>
                    <div class="weapon-stats">
                      {weapon.animationCount > 0 && `${weapon.animationCount} anims • `}
                      {weapon.textureCount} textures
                    </div>
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  </body>
</html>
